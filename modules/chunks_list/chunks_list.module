<?php

/**
 * @file
 * Provide a list chunk type.
 */

/**
 * Implements hook_chunk_types().
 */
function chunks_list_chunk_types() {
  return array(
    'list' => array(
      'title' => t('List'),
      'default configuration' => array(
        'style' => 'ul',
        'list' => array(''),
      ),
      'default type settings' => array(
        'edit_in_place' => 0,
        'format' => '',
      ),
      'client themeable' => TRUE,
      'file' => 'chunk_types.list.inc',
    ),
    'definitions' => array(
      'title' => t('Definition list'),
      'default configuration' => array(
        'definitions' => array(),
      ),
      'client themeable' => TRUE,
      'file' => 'chunk_types.definitions.inc',
    ),
  );
}

/**
 * Implements hook_libraries_info().
 */
function chunks_list_libraries_info() {
  $libraries = array();
  $libraries['pen'] = array(
    'name' => 'Pen',
    'vendor url' => 'https://github.com/sofish/pen',
    'download url' => 'https://github.com/sofish/pen',
    'version arguments' => array(
      'file' => 'bower.json',
      'pattern' => '@version":\s"+([0-9\.]+)+@',
    ),
    'files' => array(
      'js' => array(
        'src/pen.js',
        'src/markdown.js',
      ),
      'css' => array(
        'src/pen.css',
      ),
    ),
  );
  return $libraries;
}

/**
 * Implements hook_preprocess_chunk().
 */
function chunks_list_preprocess_chunk(&$variables) {
  if ($variables['chunk_type']->name == 'list') {

    $config = $variables['configuration'];

    // Do not show empty list items.
    if (count($config['list']) > 1) {
      foreach ($config['list'] as $key => $item) {
        if (empty($item) || $item === '<br>') {
          unset($variables['configuration']['list'][$key]);
        }
      }
    }

    // Make sure edit_in_place exists in the configuration.
    if (!isset($config['edit_in_place'])) {
      $variables['configuration']['edit_in_place'] = FALSE;
    }
  }
}

