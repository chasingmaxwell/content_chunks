<?php

/**
 * @file
 * Provide an embed chunk type for embeding content in an iframe.
 */

/**
 * Implements hook_chunk_types().
 */
function chunks_embed_chunk_types() {
  return array(
    'embed' => array(
      'title' => t('Embedded media'),
      'default configuration' => array(
        'embed_code' => '',
        'fid' => '',
        'display' => 1,
      ),
      'default type settings' => array(
        'view_mode' => 'media_original',
        'size' => 60,
      ),
    ),
  );
}

/**
 * Implements hook_CHUNK_TYPE_chunk_type_settings_form().
 */
function chunks_embed_embed_chunk_type_settings_form($chunk_instance, $delta, $form, &$form_state) {

  $settings = $chunk_instance['settings'];

  $instance_settings_form = array();

  $instance_settings_form['view_mode'] = array(
    '#title' => t('View mode'),
    '#type' => 'select',
    '#options' => file_entity_view_mode_labels(),
    '#default_value' => $settings['view_mode'],
  );

  $instance_settings_form['size'] = array(
    '#type' => 'textfield',
    '#title' => t('Size of textfield'),
    '#default_value' => $settings['size'],
    '#required' => TRUE,
    '#element_validate' => array('element_validate_integer_positive'),
  );

  return $instance_settings_form;
}

/**
 * Implements hook_CHUNK_TYPE_chunk_form().
 */
function chunks_embed_embed_chunk_form(&$configuration, $chunk_instance, $form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $config_form = array(
    '#element_validate' => array('_chunks_embed_validate'),
  );

  $config_form['embed_code'] = array(
    '#type' => 'textfield',
    '#default_value' => $configuration['embed_code'],
    '#size' => $chunk_instance['settings']['size'],
    '#maxlength' => 1024,
  );

  $config_form['fid'] = array(
    '#type' => 'hidden',
    '#default_value' => $configuration['fid'],
  );

  $config_form['display'] = array(
    '#type' => 'value',
    '#value' => 1,
  );

  return $config_form;
}

/**
 * #validate handler for the embed chunk configuration element.
 */
function _chunks_embed_validate($element, &$form_state, $form) {
  $embed_code = $element['embed_code']['#value'];
  $fid = NULL;

  if (!empty($embed_code)) {

    // Get the fid of a referencable file from the entered url.
    try {
      $provider = media_internet_get_provider($embed_code);
    }
    catch (Exception $error) {
      form_error($element['embed_code'], t('Found no valid media with that url.'));
      return;
    }

    $file = $provider->save();
    $fid = $file->fid;
    form_set_value($element['embed_code'], file_create_url($file->uri), $form_state);
  }

  form_set_value($element['fid'], $fid, $form_state);
}

/**
 * Implements hook_CHUNK_TYPE_chunk_is_empty().
 */
function chunks_embed_embed_chunk_is_empty($configuration, $item, $field) {
  if (empty($configuration['fid'])) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Implements hook_preprocess_chunk().
 *
 * Preprocess variables for chunk--embed.tpl.php.
 *
 * @see template_preprocess_chunk()
 * @see chunk--embed.tpl.php
 */
function chunks_embed_preprocess_chunk(&$variables, $hook) {
  if ($variables['chunk_type']->name == 'embed') {
    if ($variables['file'] = file_load($variables['configuration']['fid'])) {
      $variables['media'] = file_view($variables['file'], $variables['instance_settings']['view_mode']);
    }
    else {
      $variables['media'] = array('#markup' => t('The referenced file (fid: %fid) was unable to be loaded.', array('%fid' => $variables['configuration']['fid'])));
    }
  }
}
